import re
import sys
import fileinput

def check_for_pattern(line):
	pattern = re.compile()
	return pattern.match(line)
	
filename = sys.argv[1]
for line in fileinput.input(filename, inplace = 1):
	pattern_one = re.compile("\$(_get|_post|_request)\[.*?\]", re.IGNORECASE)
	pattern_e = re.compile("\w*?(mysqli*_query|\$[^=]*?->query)\w*?.*,?", re.IGNORECASE)
	pattern_blabla = re.compile("mysqli_query\(\$[\w]+,\s*")
	pattern_square_brackets = re.compile("\$(_GET|_POST|_REQUEST)\[.*\]", re.IGNORECASE)
	pattern_inside = re.compile("\[.*\]");
	pattern_in_brackets = re.compile(r'\((?P<abc>.*?)\n')
	pattern_lalala = re.compile("\".*\"")
	pattern_two = re.compile(r'\"(?P<abc>.*?)\"')
	pattern_isset = re.compile("isset", re.IGNORECASE)
	if (pattern_one.search(line) and not pattern_isset.search(line)):
		q = re.findall(pattern_square_brackets, line)
		z = re.findall(pattern_inside, line)
		r = re.sub(pattern_square_brackets, 'sanitizeInput($' + q[0] + z[0] + ')', line.rstrip('\n'))
		print(r)
	elif (pattern_e.search(line)):
		q = re.findall(pattern_lalala, line)
		r = re.sub(pattern_e, 'executePreparedStatement(' + q[0] + ');', line.rstrip('\n'))
		print(r)
	else:
		print (line.rstrip('\n'))


	
